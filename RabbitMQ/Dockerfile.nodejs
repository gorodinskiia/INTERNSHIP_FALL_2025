# Multi-stage Dockerfile for RabbitMQ Node.js Examples
FROM node:18-alpine AS base

# Install security updates and required packages
RUN apk update && apk upgrade && \
    apk add --no-cache dumb-init curl && \
    rm -rf /var/cache/apk/*

# Create app directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci --only=production && npm cache clean --force

# Production stage
FROM base AS production

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001

# Copy application code
COPY --chown=nodejs:nodejs . .

# Create logs directory
RUN mkdir -p logs && chown -R nodejs:nodejs logs

# Switch to non-root user
USER nodejs

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
  CMD node healthcheck.js || exit 1

# Use dumb-init for proper signal handling
ENTRYPOINT ["dumb-init", "--"]

# Default command
CMD ["node", "index.js"]

# Development stage
FROM base AS development

# Install development dependencies
RUN npm ci

# Copy application code
COPY . .

# Create logs directory
RUN mkdir -p logs

# Expose ports (if needed)
EXPOSE 3000

# Development command
CMD ["npm", "run", "dev"]

# Producer stage
FROM base AS producer

COPY . .

# Producer command
CMD ["node", "examples/basic/producer.js"]

# Consumer stage
FROM base AS consumer

COPY . .

# Consumer command
CMD ["node", "examples/basic/consumer.js"]

# Tester stage
FROM base AS tester

COPY . .

# Load testing command
CMD ["node", "examples/load-test.js"]

# Healthcheck stage
FROM base AS healthcheck

COPY . .

# Health check command
CMD ["node", "healthcheck.js"]

